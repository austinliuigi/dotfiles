"Name: vimrc
"Author: Austin Liu
"Date Created: July 2020
"Date Modified: August 5, 2020
"""Essentials"{{{

syntax on						" enable syntax highlighting

filetype plugin indent on		" enable filetype detection, execute filetype-specific ex commands local to the local buffer, and load the indent file for the detected filetype

set encoding=utf-8				" character encoding format

set backspace=start,eol,indent	" better backspace in insert mode

set showcmd
"}}}

"""Niceties"{{{

colorscheme custom              " use personal colorscheme

set splitright                  " default vert split window to appear on the right

set foldmethod=marker           " use {{{ and }}} to indicate beginning and end of a fold

set hidden						" allow a buffer to load in a window that currently has a modified buffer

set relativenumber				" make line numbers relative to current line

set number						" show line numbers (only shows current line # with relativenumber set)

set showmatch					" show matching symmetric delimiter

set scrolloff=5					" num of lines to keep above/below cursor

set wildmenu					" command-line autocomplete bar

set lazyredraw					" be conservative with screen refreshes

set cursorline                  " highlight line that cursor is on

set linebreak                   " avoid wrapping mid-word
"set directory=~/tmp

"set backupdir=~/tmp
"}}}

""" Status Line {{{

""set laststatus=2                " always show status line
""
""set statusline=%#search#
""set statusline+=%{mode(0)}       " current vim mode
""
""set statusline+=\ %m            " indicate if buffer has unsaved changes
""
""set statusline+=\ %t            " file name
""
""let b:currentmode = {
""    \ 'n' : NORMAL
""    \ 'i' : INSERT
""    \ 'v' : VISUAL
"}}}

""" Whitespace"{{{

set tabstop=4					" length of <tab> when it is displayed

set softtabstop=4				" length of <tab> (& respective <bksp>) when you type it

set shiftwidth=4				" indent length

set expandtab					" tab will act as spaces (makes its length consistent across all platforms)

set autoindent					" indent to the previous line's indent level

set smartindent					" indent based on c syntax
"}}}

""" Searching"{{{

set incsearch					" search as you type

set hlsearch					" search highlighting

set ignorecase                  " default to case insensitive
"}}}

""" Mappings{{{

let mapleader = " "

nnoremap <leader>v :vsp<CR>

nnoremap <leader>h :nohl<CR>

nnoremap <leader>n :set relativenumber!<CR>

nnoremap <space> <nop>
"}}}
